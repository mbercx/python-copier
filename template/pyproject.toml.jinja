[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{package_name}}"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
keywords = []
authors = []
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[tool.hatch.version]
path = "src/{{ package_name.lower().replace('-', '_') }}/__about__.py"

{% if docs == 'myst'-%}
[tool.hatch.envs.docs]
dependencies = [
  "mystmd"
]
scripts.build = "cd docs && myst build"
scripts.serve = "cd docs && myst start"
{%- endif -%}

{%- if docs == 'mkdocs' -%}
[tool.hatch.envs.docs]
dependencies = [
  "mkdocs",
  "mkdocs-material"
]
scripts.build = "mkdocs build --clean --strict"
scripts.serve = "mkdocs serve --dev-addr localhost:8000"
scripts.deploy = "mkdocs gh-deploy --force"
{%- endif %}

[tool.hatch.envs.precommit]
dependencies = ["pre-commit"]
scripts.install = "pre-commit install"
scripts.run = "pre-commit run {args:--all-files}"

[tool.ruff]
lint.ignore = [
    "TRY003",  # https://docs.astral.sh/ruff/rules/raise-vanilla-args/
    "EM101",   # https://docs.astral.sh/ruff/rules/raw-string-in-exception/
    "EM102",   # https://docs.astral.sh/ruff/rules/f-string-in-exception/
    "PLR2004", # https://docs.astral.sh/ruff/rules/magic-value-comparison/
    "FBT002",  # https://docs.astral.sh/ruff/rules/boolean-default-value-positional-argument/
    "TID252",  # https://docs.astral.sh/ruff/rules/relative-imports/
]
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["INP001", "S101"]
